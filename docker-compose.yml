version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: jiffoo-postgres
    environment:
      POSTGRES_DB: jiffoo_mall
      POSTGRES_USER: jiffoo
      POSTGRES_PASSWORD: jiffoo_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - jiffoo-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U jiffoo -d jiffoo_mall"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: jiffoo-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - jiffoo-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: .
      dockerfile: apps/backend/Dockerfile
    container_name: jiffoo-backend
    environment:
      NODE_ENV: development
      PORT: 8001
      HOST: 0.0.0.0
      DATABASE_URL: postgresql://jiffoo:jiffoo_password@postgres:5432/jiffoo_mall
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_EXPIRES_IN: 7d
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_DB: 0
    ports:
      - "8001:8001"
    volumes:
      - ./apps/backend/uploads:/app/uploads
      - ./apps/backend/logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - jiffoo-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Web App
  frontend:
    build:
      context: .
      dockerfile: apps/frontend/Dockerfile
    container_name: jiffoo-frontend
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:8001
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - jiffoo-network

  # Admin Dashboard
  admin:
    build:
      context: .
      dockerfile: apps/admin/Dockerfile
    container_name: jiffoo-admin
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:8001
    ports:
      - "3001:3000"
    depends_on:
      - backend
    networks:
      - jiffoo-network

volumes:
  postgres_data:
  redis_data:

networks:
  jiffoo-network:
    driver: bridge
